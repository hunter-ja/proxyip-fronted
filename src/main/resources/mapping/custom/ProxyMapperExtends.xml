<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.proxyip.fronted.dao.ProxyMapper">
    <resultMap id="ConnectedRate" type="com.proxyip.fronted.model.ProxyExtends" extends="BaseResultMap">
    <result column="connected_rate" jdbcType="VARCHAR" property="connectedRate"/>
    </resultMap>
    <select id="getList" resultMap="ConnectedRate">
    SELECT
        port,
        scheme,
        last_check_time,
        area,
        created_at,
        ip, (
            connect_times / (
                connect_times + disconnet_times
            )
        ) connected_rate
    FROM
        proxy
    WHERE
        proxy.last_check_time IS NOT NULL
    AND is_deleted = 'N'
    ORDER BY
        last_check_time DESC,
        connected_rate DESC,
        connect_times DESC
    limit #{offset} , #{limit}
    </select>
    <select id="count" resultType="java.lang.Integer">
        select count(*) from proxy where last_check_time IS NOT NULL and is_deleted = 'N'
    </select>
    <select id="search" resultMap="ConnectedRate">
    SELECT
        port,
        scheme,
        last_check_time,
        area,
        created_at,
        ip, (
            connect_times / (
                connect_times + disconnet_times
            )
        ) connected_rate
    FROM
        proxy
    WHERE
        proxy.last_check_time IS NOT NULL
    AND is_deleted = 'N'
    and (scheme like concat('%',#{keyword},'%') or area like concat('%',#{keyword},'%'))
    ORDER BY
        last_check_time DESC,
        connected_rate DESC,
        connect_times DESC
    limit #{offset} , #{limit}
    </select>
    <select id="countByKeyword" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(*) from proxy where proxy.last_check_time IS NOT NULL AND is_deleted = 'N' and (scheme like concat('%',#{keyword},'%') or area like concat('%',#{keyword},'%'))
    </select>
    <select id="getNew" resultMap="ConnectedRate">
    SELECT
        port,
        scheme,
        last_check_time,
        area,
        created_at,
        ip, (
            connect_times / (
                connect_times + disconnet_times
            )
        ) connected_rate
    FROM
        proxy
    WHERE
        proxy.last_check_time IS NOT NULL
    AND is_deleted = 'N'
    ORDER BY
        created_at desc,
        last_check_time DESC,
        connected_rate DESC,
        connect_times DESC
    limit #{offset} , #{limit}
    </select>
    <select id="getAvailable" resultMap="ConnectedRate">
    SELECT
        port,
        scheme,
        last_check_time,
        area,
        created_at,
        ip, (
            connect_times / (
                connect_times + disconnet_times
            )
        ) connected_rate
    FROM
        proxy
    WHERE
        proxy.last_check_time IS NOT NULL
    AND is_deleted = 'N'
    ORDER BY
        connected_rate DESC,
        connect_times DESC,
        last_check_time DESC
    limit #{offset} , #{limit}
    </select>

</mapper>